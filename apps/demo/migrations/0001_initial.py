# Generated by Django 3.2.9 on 2021-12-01 09:46

import apps.base.model_sharding
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DeviceLog2021',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.SmallIntegerField(default=0, help_text='状态', verbose_name='status')),
                ('is_deleted', models.BooleanField(default=False, help_text='是否删除', verbose_name='is_deleted')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='修改时间')),
            ],
            options={
                'verbose_name': 'DeviceLog2021',
                'verbose_name_plural': 'DeviceLog2021',
                'db_table': 'demo_device_log_2021',
            },
            bases=(models.Model, apps.base.model_sharding.ShardingMixin),
        ),
        migrations.CreateModel(
            name='DeviceLog2022',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.SmallIntegerField(default=0, help_text='状态', verbose_name='status')),
                ('is_deleted', models.BooleanField(default=False, help_text='是否删除', verbose_name='is_deleted')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='修改时间')),
            ],
            options={
                'verbose_name': 'DeviceLog2022',
                'verbose_name_plural': 'DeviceLog2022',
                'db_table': 'demo_device_log_2022',
            },
            bases=(models.Model, apps.base.model_sharding.ShardingMixin),
        ),
        migrations.CreateModel(
            name='DeviceLog2023',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.SmallIntegerField(default=0, help_text='状态', verbose_name='status')),
                ('is_deleted', models.BooleanField(default=False, help_text='是否删除', verbose_name='is_deleted')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='修改时间')),
            ],
            options={
                'verbose_name': 'DeviceLog2023',
                'verbose_name_plural': 'DeviceLog2023',
                'db_table': 'demo_device_log_2023',
            },
            bases=(models.Model, apps.base.model_sharding.ShardingMixin),
        ),
        migrations.CreateModel(
            name='DeviceLog2024',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.SmallIntegerField(default=0, help_text='状态', verbose_name='status')),
                ('is_deleted', models.BooleanField(default=False, help_text='是否删除', verbose_name='is_deleted')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='修改时间')),
            ],
            options={
                'verbose_name': 'DeviceLog2024',
                'verbose_name_plural': 'DeviceLog2024',
                'db_table': 'demo_device_log_2024',
            },
            bases=(models.Model, apps.base.model_sharding.ShardingMixin),
        ),
        migrations.CreateModel(
            name='DeviceLog2025',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.SmallIntegerField(default=0, help_text='状态', verbose_name='status')),
                ('is_deleted', models.BooleanField(default=False, help_text='是否删除', verbose_name='is_deleted')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='修改时间')),
            ],
            options={
                'verbose_name': 'DeviceLog2025',
                'verbose_name_plural': 'DeviceLog2025',
                'db_table': 'demo_device_log_2025',
            },
            bases=(models.Model, apps.base.model_sharding.ShardingMixin),
        ),
        migrations.CreateModel(
            name='DeviceLog2026',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.SmallIntegerField(default=0, help_text='状态', verbose_name='status')),
                ('is_deleted', models.BooleanField(default=False, help_text='是否删除', verbose_name='is_deleted')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='修改时间')),
            ],
            options={
                'verbose_name': 'DeviceLog2026',
                'verbose_name_plural': 'DeviceLog2026',
                'db_table': 'demo_device_log_2026',
            },
            bases=(models.Model, apps.base.model_sharding.ShardingMixin),
        ),
        migrations.CreateModel(
            name='DeviceLog2027',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.SmallIntegerField(default=0, help_text='状态', verbose_name='status')),
                ('is_deleted', models.BooleanField(default=False, help_text='是否删除', verbose_name='is_deleted')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='修改时间')),
            ],
            options={
                'verbose_name': 'DeviceLog2027',
                'verbose_name_plural': 'DeviceLog2027',
                'db_table': 'demo_device_log_2027',
            },
            bases=(models.Model, apps.base.model_sharding.ShardingMixin),
        ),
        migrations.CreateModel(
            name='DeviceLog2028',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.SmallIntegerField(default=0, help_text='状态', verbose_name='status')),
                ('is_deleted', models.BooleanField(default=False, help_text='是否删除', verbose_name='is_deleted')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='修改时间')),
            ],
            options={
                'verbose_name': 'DeviceLog2028',
                'verbose_name_plural': 'DeviceLog2028',
                'db_table': 'demo_device_log_2028',
            },
            bases=(models.Model, apps.base.model_sharding.ShardingMixin),
        ),
        migrations.CreateModel(
            name='DeviceLog2029',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.SmallIntegerField(default=0, help_text='状态', verbose_name='status')),
                ('is_deleted', models.BooleanField(default=False, help_text='是否删除', verbose_name='is_deleted')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='修改时间')),
            ],
            options={
                'verbose_name': 'DeviceLog2029',
                'verbose_name_plural': 'DeviceLog2029',
                'db_table': 'demo_device_log_2029',
            },
            bases=(models.Model, apps.base.model_sharding.ShardingMixin),
        ),
        migrations.CreateModel(
            name='DeviceLog2030',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.SmallIntegerField(default=0, help_text='状态', verbose_name='status')),
                ('is_deleted', models.BooleanField(default=False, help_text='是否删除', verbose_name='is_deleted')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='修改时间')),
            ],
            options={
                'verbose_name': 'DeviceLog2030',
                'verbose_name_plural': 'DeviceLog2030',
                'db_table': 'demo_device_log_2030',
            },
            bases=(models.Model, apps.base.model_sharding.ShardingMixin),
        ),
        migrations.CreateModel(
            name='DeviceLog2031',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.SmallIntegerField(default=0, help_text='状态', verbose_name='status')),
                ('is_deleted', models.BooleanField(default=False, help_text='是否删除', verbose_name='is_deleted')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='修改时间')),
            ],
            options={
                'verbose_name': 'DeviceLog2031',
                'verbose_name_plural': 'DeviceLog2031',
                'db_table': 'demo_device_log_2031',
            },
            bases=(models.Model, apps.base.model_sharding.ShardingMixin),
        ),
        migrations.CreateModel(
            name='Log2020',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.PositiveSmallIntegerField(default=0)),
                ('content', models.TextField()),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='是否删除', verbose_name='is_deleted')),
            ],
            options={
                'verbose_name': 'Log2020',
                'verbose_name_plural': 'Log2020',
                'db_table': 'demo_log_2020',
            },
            bases=(models.Model, apps.base.model_sharding.ShardingMixin),
        ),
        migrations.CreateModel(
            name='Log2021',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.PositiveSmallIntegerField(default=0)),
                ('content', models.TextField()),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='是否删除', verbose_name='is_deleted')),
            ],
            options={
                'verbose_name': 'Log2021',
                'verbose_name_plural': 'Log2021',
                'db_table': 'demo_log_2021',
            },
            bases=(models.Model, apps.base.model_sharding.ShardingMixin),
        ),
        migrations.CreateModel(
            name='User0',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('age', models.IntegerField(default=18)),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'User0',
                'verbose_name_plural': 'User0',
                'db_table': 'demo_user_0',
            },
            bases=(models.Model, apps.base.model_sharding.ShardingMixin),
        ),
        migrations.CreateModel(
            name='User1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('age', models.IntegerField(default=18)),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'User1',
                'verbose_name_plural': 'User1',
                'db_table': 'demo_user_1',
            },
            bases=(models.Model, apps.base.model_sharding.ShardingMixin),
        ),
        migrations.CreateModel(
            name='User2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('age', models.IntegerField(default=18)),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'User2',
                'verbose_name_plural': 'User2',
                'db_table': 'demo_user_2',
            },
            bases=(models.Model, apps.base.model_sharding.ShardingMixin),
        ),
        migrations.CreateModel(
            name='User3',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('age', models.IntegerField(default=18)),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'User3',
                'verbose_name_plural': 'User3',
                'db_table': 'demo_user_3',
            },
            bases=(models.Model, apps.base.model_sharding.ShardingMixin),
        ),
        migrations.CreateModel(
            name='User4',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('age', models.IntegerField(default=18)),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'User4',
                'verbose_name_plural': 'User4',
                'db_table': 'demo_user_4',
            },
            bases=(models.Model, apps.base.model_sharding.ShardingMixin),
        ),
        migrations.CreateModel(
            name='User5',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('age', models.IntegerField(default=18)),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'User5',
                'verbose_name_plural': 'User5',
                'db_table': 'demo_user_5',
            },
            bases=(models.Model, apps.base.model_sharding.ShardingMixin),
        ),
        migrations.CreateModel(
            name='User6',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('age', models.IntegerField(default=18)),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'User6',
                'verbose_name_plural': 'User6',
                'db_table': 'demo_user_6',
            },
            bases=(models.Model, apps.base.model_sharding.ShardingMixin),
        ),
        migrations.CreateModel(
            name='User7',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('age', models.IntegerField(default=18)),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'User7',
                'verbose_name_plural': 'User7',
                'db_table': 'demo_user_7',
            },
            bases=(models.Model, apps.base.model_sharding.ShardingMixin),
        ),
        migrations.CreateModel(
            name='User8',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('age', models.IntegerField(default=18)),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'User8',
                'verbose_name_plural': 'User8',
                'db_table': 'demo_user_8',
            },
            bases=(models.Model, apps.base.model_sharding.ShardingMixin),
        ),
        migrations.CreateModel(
            name='User9',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('age', models.IntegerField(default=18)),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'User9',
                'verbose_name_plural': 'User9',
                'db_table': 'demo_user_9',
            },
            bases=(models.Model, apps.base.model_sharding.ShardingMixin),
        ),
    ]
